<block>
  <name>famvis</name>
  <key>inspector_famvis</key>
  <category>[Inspector]/AMC</category>
  <import>import inspector</import>
  <import>from PyQt4 import Qt</import>
  <import>from gnuradio import qtgui</import> 
  <import>import sip</import>
  <make>#set $win = 'self._%s_win'%$id
inspector.famvis($vlen,$width,$height)
$(win) = sip.wrapinstance(self.$(id).pyqwidget(), Qt.QWidget) 
$(gui_hint()($win))</make>
  <!-- Make one 'param' node for every Parameter you want settable from the GUI.
       Sub-nodes:
       * name
       * key (makes the value accessible as $keyname, e.g. in the make node)
       * type -->
  <param>
    <name>Vec Length</name>
    <key>vlen</key>
    <type>int</type>
  </param>



  <param>
    <name>Width</name>
    <key>width</key>
    <type>int</type>
  </param>

  <param>
    <name>Height</name>
    <key>height</key>
    <type>int</type>
  </param>


  <param>
    <name>GUI Hint</name>
    <key>gui_hint</key>
    <value></value>
    <type>gui_hint</type>
    <hide>part</hide>
  </param>




  <!-- Make one 'sink' node per input. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <sink>
    <name>in</name>
    <type>float</type>
    <vlen>$vlen</vlen>
  </sink>



  <!-- Make one 'source' node per output. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <!--<source>
    <name>out</name>
    <type></type>-->

</block>
